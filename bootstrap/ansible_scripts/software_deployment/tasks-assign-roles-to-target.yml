---
- hosts: "{{ target }}"
  become: yes
  gather_facts: no
  serial: "{{ serial }}"
  tasks:
    - name: Get node FQDN
      command: hostname -f
      register: hostfqdn

    - name: Set baseline node roles
      command: knife node run_list set {{ hostfqdn.stdout }} 'role[BCPC-Hardware-{{ hardware_type }}]'
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for head node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-Headnode]'
      when: "'headnodes' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for work node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-Worknode]'
      when: "'worknodes' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for diskless work node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-DisklessWorknode]'
      when: "'diskless-worknodes' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for alerting node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-Alerting]'
      when: "'alerting' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for metrics node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-Metrics]'
      when: "'metrics' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Add role for logging node
      command: knife node run_list add {{ hostfqdn.stdout }} 'role[BCPC-Logging]'
      when: "'logging' in group_names"
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Set node environment
      command: knife node environment set {{ hostfqdn.stdout }} {{ cluster_name }}
      delegate_to: "{{ groups['bootstraps'][0] }}"

    - name: Give head/monitoring node admin access to Chef server (set node as admin)
      command: /opt/opscode/embedded/bin/knife group add client {{ hostfqdn.stdout }} admins
      delegate_to: "{{ groups['bootstraps'][0] }}"
      when: "'headnodes' in group_names or 'monitoring' in group_names"
