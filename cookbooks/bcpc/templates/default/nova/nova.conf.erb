################################################
#
#              Generated by Chef
#
################################################

[DEFAULT]

# If using qpid...
#rpc_backend=nova.openstack.common.rpc.impl_qpid
#qpid_hostname=<%=node['bcpc']['management']['vip']%>
#qpid_username=admin
#qpid_password=<%=get_config('rabbitmq-password')%>

# Nova API settings
auth_strategy=keystone
api_paste_config=/etc/nova/api-paste.ini
s3_host=<%=node['bcpc']['management']['vip']%>
osapi_compute_listen=<%= node['bcpc']['management']['ip'] %>
osapi_compute_workers=<%=node['bcpc']['nova']['workers']%>
<% if node['bcpc']['enabled']['neutron'] %>
metadata_listen=127.0.0.1
<% else %>
metadata_listen=169.254.169.254
<% end %>
metadata_host=169.254.169.254
metadata_workers=<%=node['bcpc']['nova']['workers']%>
dmz_cidr=169.254.169.254/32
<% if @servers.include?(node) -%>
enabled_apis=osapi_compute,metadata
<% else -%>
enabled_apis=metadata
<% end %>
<% if not node["bcpc"]["vendordata_driver"].nil? %>
vendordata_driver = <%=node["bcpc"]["vendordata_driver"] %>
<% end %>

<% if node['bcpc']['nova']['notifications']['enabled'] %>
# Nova notification settings
notification_topics=<%= node['bcpc']['nova']['notifications']['notification_topics'] %>
notification_driver=<%= node['bcpc']['nova']['notifications']['notification_driver'] %>
notify_on_state_change=<%= node['bcpc']['nova']['notifications']['notify_on_state_change'] %>
<% end %>

# Nova Scheduler
scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
scheduler_default_filters=<%=node['bcpc']['nova']['scheduler_default_filters'].join(',')%>
ram_allocation_ratio=<%=node['bcpc']['nova']['ram_allocation_ratio']%>
reserved_host_memory_mb=<%=node['bcpc']['nova']['reserved_host_memory_mb']%>
cpu_allocation_ratio=<%=node['bcpc']['nova']['cpu_allocation_ratio']%>
scheduler_host_subset_size=<%= node['bcpc']['nova']['scheduler_host_subset_size'] %>
max_concurrent_builds=<%= node['bcpc']['nova']['max_concurrent_builds'] %>

# Nova Compute settings
compute_driver=libvirt.LibvirtDriver
compute_monitors = cpu.virt_driver
use_cow_images=True
#snapshot_image_format=qcow2
sync_power_state_interval=<%= node['bcpc']['nova']['sync_power_state_interval'] %>
resume_guests_state_on_host_boot=<%= node['bcpc']['nova']['resume_guests_state_on_host_boot'] %>
<% if node['bcpc']['nova']['cpu_config']['vcpu_pin_set'] %>
vcpu_pin_set = <%= node['bcpc']['nova']['cpu_config']['vcpu_pin_set'] %>
<% end %>

# Nova Volume settings
volume_api_class=nova.volume.cinder.API

# Glance settings
image_service=nova.image.glance.GlanceImageService

# Cloudpipe
vpn_image_id=<%=get_config('glance-cloudpipe-uuid')%>
use_project_ca=True
cnt_vpn_clients=5

# Misc other settings
log-dir=/var/log/nova
state_path=/var/lib/nova
rootwrap_config=/etc/nova/rootwrap.conf
debug=<%= node['bcpc']['nova']['debug'] %>
<% if not node['bcpc']['nova']['default_log_levels'].nil? %>
default_log_levels="<%= node['bcpc']['nova']['default_log_levels'] %>"
<% end %>
#rpc_response_timeout=120

# ca_file = /etc/ssl/certs/ssl-bcpc.pem
# cinder_ca_certificates_file = /etc/ssl/certs/ssl-bcpc.pem

# Quotas
<% node['bcpc']['nova']['quota'].each do | key, value| %>
quota_<%=key%> = <%= value %>
<% end %>
max_age = 28800
until_refresh = 10

# Nova VNC settings
novncproxy_host=<%=node['bcpc']['management']['ip']%>

# Networking settings
<% if node['bcpc']['enabled']['neutron'] %>
network_api_class = nova.network.neutronv2.api.API
security_group_api=neutron
firewall_driver = nova.virt.firewall.NoopFirewallDriver
vif_plugging_is_fatal = False
vif_plugging_timeout = 0

[neutron]
url = <%= node['bcpc']['protocol']['neutron'] %>://openstack.<%= node['bcpc']['cluster_domain'] %>:9696
admin_tenant_name = <%= node['bcpc']['admin_tenant'] %>
auth_strategy = keystone
admin_auth_url = <%= node['bcpc']['protocol']['keystone'] %>://openstack.<%= node['bcpc']['cluster_domain'] %>:35357/v2.0/
admin_username = <%= get_config('keystone-admin-user') %>
admin_password = <%= get_config('keystone-admin-password') %>
<% else %>
network_manager=nova.network.manager.VlanManager
firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver
allow_same_net_traffic=False
public_interface=<%=node['bcpc']['floating']['interface']%>
vlan_interface=<%=node['bcpc']['fixed']['vlan_interface']%>
vlan_start=<%=node['bcpc']['fixed']['vlan_start']%>
multi_host=True
fixed_range=<%=node['bcpc']['fixed']['cidr']%>
floating_range=<%=node['bcpc']['floating']['cidr']%>
network_size=<%=node['bcpc']['fixed']['network_size']%>
<% if node['bcpc']['nova']['conditional_dns'] %>
<% @dns_servers.each do |dns_server| %>
dns_server=<%= dns_server %>
<% end %>
dns_server=/<%= @fixed_reverse_zone %>/<%= node['bcpc']['management']['vip'] %>
<% else %>
flat_network_dns=<%=node['bcpc']['management']['vip']%>
<% end %>
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
force_dhcp_release=False
share_dhcp_address=True
teardown_unused_network_gateway=True
fixed_ip_disassociate_timeout=30
dhcp_lease_time=<%=node['bcpc']['fixed']['dhcp_lease_time']%>
send_arp_for_ha=True
my_ip=<%=node['bcpc']['management']['ip']%>
routing_source_ip=<%=node['bcpc']['floating']['ip']%>
dhcp_domain=<%=node['bcpc']['cluster_domain']%>
default_availability_zone=
default_floating_pool = <%= node['bcpc']['region_name'] %>
<% end %>

[vnc]
enabled=True
ssl_only=false
key=/etc/nova/ssl-bcpc.key
cert=/etc/nova/ssl-bcpc.pem
novncproxy_host=<%=node['bcpc']['management']['ip']%>
<% if node['bcpc']['vnc']['proxy_use_vip'] %>
novncproxy_base_url=https://<%=node['bcpc']['management']['vip']%>:6080/vnc_auto.html
<% else %>
novncproxy_base_url=https://openstack.<%=node['bcpc']['cluster_domain']%>:6080/vnc_auto.html
<% end %>
vncserver_proxyclient_address=<%=node['bcpc']['management']['ip']%>
vncserver_listen=<%=node['bcpc']['management']['ip']%>

[oslo_concurrency]
lock_path=/var/lock/nova

[oslo_messaging_rabbit]
# Rabbit message queue settings
#rabbit_host=<%=node['bcpc']['management']['vip']%>
rabbit_hosts=<%=get_shuffled_servers(@servers, prefer_local=true).map{|x| x['bcpc']['management']['ip'] + ":5672"}.join(',')%>
rabbit_password=<%=get_config('rabbitmq-password')%>
rabbit_ha_queues=True
heartbeat_timeout_threshold=<%=node['bcpc']['rabbitmq']['heartbeat']%>
amqp_durable_queues=<%=node['bcpc']['rabbitmq']['durable_queues']%>

[database]
# MySQL Connection
connection=mysql://<%=get_config('mysql-nova-user')%>:<%=get_config('mysql-nova-password')%>@<%=node['bcpc']['management']['vip']%>/<%=node['bcpc']['dbname']['nova']%>
max_overflow=<%= node['bcpc']['nova']['database']['max_overflow'] %>
max_pool_size=<%= node['bcpc']['nova']['database']['max_pool_size'] %>
idle_timeout=3600

[api_database]
connection=mysql://<%= get_config('mysql-nova-api-user') %>:<%= get_config('mysql-nova-api-password') %>@<%= node['bcpc']['management']['vip'] %>/<%= node['bcpc']['dbname']['nova_api'] %>
max_overflow=<%= node['bcpc']['nova']['database']['max_overflow'] %>
max_pool_size=<%= node['bcpc']['nova']['database']['max_pool_size'] %>
idle_timeout=3600

[ssl]
# ca_file = /etc/ssl/certs/ssl-bcpc.pem

# Keystone settings
[keystone_authtoken]
<% snippet = 'keystone/keystone_authtoken.snippet.erb' %>
<%# add the node for chef nonsense... see https://github.com/chef/chef/issues/1506 %>
<% vars = @partials[snippet]['variables'].merge({node: @node}) %>
<%= render snippet, :variables => vars %>
signing_dir = /var/lib/nova
memcached_servers=<%=@servers.map{|x| x['bcpc']['management']['ip'] + ":11211"}.join(",")%>
memcache_pool_conn_get_timeout=1
memcache_pool_socket_timeout=1
memcache_pool_dead_retry=60

[conductor]
workers=<%=node['bcpc']['nova']['workers']%>

[glance]
api_servers=<%=node['bcpc']['protocol']['glance']%>://<%=node['bcpc']['management']['vip']%>:9292
api_insecure=True

[libvirt]
# Always boot nova VMs from RBD
images_type=rbd
images_rbd_pool=<%=node['bcpc']['ceph']['vms']['name']%>
images_rbd_ceph_conf=/etc/ceph/ceph.conf
rbd_user=cinder
rbd_secret_uuid=<%=get_config('libvirt-secret-uuid')%>
disk_cachemodes="network=writeback"
# do not allow libvirt to try to inject into the local partition
inject_password=false
inject_key=false
inject_partition=-2
# Set flags for libvirt live migration
live_migration_flag="VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_LIVE,VIR_MIGRATE_PERSIST_DEST,VIR_MIGRATE_TUNNELLED"
virt_type=<%=node['bcpc']['virt_type']%>
use_virtio_for_bridges=True
hw_disk_discard = unmap
<% if node['bcpc']['nova']['cpu_config']['cpu_mode'] %>
cpu_mode = <%= node['bcpc']['nova']['cpu_config']['cpu_mode'] %>
<% end %>
<% if node['bcpc']['nova']['cpu_config']['cpu_model'] %>
cpu_model = <%= node['bcpc']['nova']['cpu_config']['cpu_model'] %>
<% end %>

<% unless node["bcpc"]["vendordata_config"].nil? %>
[metadata]
<% node['bcpc']['vendordata_config'].sort.each do |k, v| %>
<%=k %>=<%=v %>
<% end %>
<% end %>

[oslo_cache]
enabled = true
memcached_servers=<%=@servers.map{|x| x['bcpc']['management']['ip'] + ":11211"}.join(",")%>
